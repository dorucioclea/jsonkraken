group 'net.jemzart.jsonkraken'
version '1.0.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.3.10'
    ext.dokka_version = '0.9.17'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2"
        classpath "info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.3.0"
    }
}

apply plugin: "info.solidsoft.pitest"
apply plugin: "kotlin"
apply plugin: "org.jetbrains.dokka"
apply plugin: "com.github.kt3k.coveralls"
apply plugin: "maven-publish"
apply plugin: "signing"

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile 'junit:junit:4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

pitest {
    timestampedReports = false
    outputFormats = ['XML', 'HTML']
}
/*jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}*/
/*
dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
    
    linkMapping {
        dir = "src/main/kotlin"
        url = "https://github.com/zogar1993/kjson"
        suffix = "#L"
    }
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId 'net.jemzart'
            artifactId 'jsonkraken'
            version '1.0.0'

            from components.java

            // create the sign pom artifact
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username "zogar1993"
                password "Elhalconrojo.62"
            }
        }
    }
}
def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Idiomatic Json parser for Kotlin'
            name 'Json Kraken'
            url 'https://github.com/zogar1993/jsonkraken'
            organization {
                name 'net.jemzart'
                url 'https://jemzart.net'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/zogar1993/jsonkraken/issues'
            }
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'https://www.apache.org/licenses/LICENSE-2.0'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/zogar1993/jsonkraken'
                connection 'scm:git:git://github.com/zogar1993/jsonkraken.git'
                developerConnection 'scm:git:ssh://git@github.com:zogar1993/jsonkraken.git'
            }
            developers {
                developer {
                    name 'zogar1993'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}
*/