group 'net.jemzart.jsonkraken'
version '1.2.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = "1.3.30"
    ext.dokka_version = "0.9.17"
    ext.coveralls_version = "2.8.2"
    ext.pitest_version = "1.3.0"
    ext.junit_version = "4.12"

    repositories {
        mavenCentral()
        jcenter()
    }
//    configurations.maybeCreate("pitest")
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:$coveralls_version"
        classpath "info.solidsoft.gradle.pitest:gradle-pitest-plugin:$pitest_version"
//        pitest "org.pitest:pitest-kotlin-plugin:0.1-SNAPSHOT"
    }
}

apply plugin: "info.solidsoft.pitest"
apply plugin: "kotlin"
apply plugin: "org.jetbrains.dokka"
apply plugin: "com.github.kt3k.coveralls"
apply plugin: "maven-publish"
apply plugin: "signing"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation"junit:junit:$junit_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs += ["-XXLanguage:+InlineClasses"]
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

//coveralls {
//    sourceDirs += ['src/main/kotlin']
//}
//pitest {
//    targetClasses = ['net.jemzart.jsonkraken.*']
//    timestampedReports = false
//    outputFormats = ['XML', 'HTML']
//}
//dokka {
//        outputFormat = 'html'
//        outputDirectory = "$buildDir/javadoc"
//
//        linkMapping {
//            dir = "src/main/kotlin"
//            url = "https://github.com/zogar1993/jsonkraken"
//            suffix = "#L"
//        }
//}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
//task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
//    outputFormat = 'javadoc'
//    outputDirectory = "$buildDir/javadoc"
//}
//task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

//artifacts {
//    archives jar
//    archives sourceJar
//    archives javadocJar
//}