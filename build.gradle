buildscript {
    ext.dokka_version = "0.10.1"
    ext.kotlin_version = "1.3.70"
    ext.coveralls_version = "2.9.0"
    ext.pitest_version = "1.4.6"
    ext.junit_version = "4.12"
}

plugins {
    id "org.jetbrains.dokka" version "$dokka_version"
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
    id "info.solidsoft.pitest" version "$pitest_version"
    id "com.github.kt3k.coveralls" version "$coveralls_version"
    id "maven-publish"
    id 'signing'
}

repositories {
    jcenter()
    mavenCentral()
}

group 'net.jemzart.jsonkraken'
version '2.0.0-SNAPSHOT'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation "junit:junit:$junit_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

coveralls {
    sourceDirs += ['src/main/kotlin']
}

pitest {
    targetClasses.set(["net.jemzart.jsonkraken.*"])
    timestampedReports.set(false)
    outputFormats.set(['XML', 'HTML'])
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
    configuration {
        reportUndocumented = true
        sourceLink {
            path = "src/main/kotlin"
            url = "https://github.com/zogar1993/jsonkraken"
            lineSuffix = "#L"
        }
    }
}

task sourceJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}
//
//signing {
//    sign configurations.archives
//}
//
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            customizePom(pom)
//            groupId 'net.jemzart'
//            artifactId 'jsonkraken'
//            version '2.0.0'
//
//            from components.java
//
//            // create the sign pom artifact
//            pom.withXml {
//                def pomFile = file("${project.buildDir}/generated-pom.xml")
//                writeTo(pomFile)
//                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
//                artifact(pomAscFile) {
//                    classifier = null
//                    extension = 'pom.asc'
//                }
//            }
//
//            artifact(sourceJar) {
//                classifier = 'sources'
//            }
//            artifact(javadocJar) {
//                classifier = 'javadoc'
//            }
//
//            // create the signed artifacts
//            project.tasks.signArchives.signatureFiles.each {
//                artifact(it) {
//                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
//                    if (matcher.find()) {
//                        classifier = matcher.group(1)
//                    } else {
//                        classifier = null
//                    }
//                    extension = 'jar.asc'
//                }
//            }
//        }
//    }
//    repositories {
//        maven {
//            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
//            credentials {
//                username "$sonatypeUsername"
//                password "$sonatypePassword"
//            }
//        }
//    }
//}
//
//def customizePom(pom) {
//    pom.withXml {
//        def root = asNode()
//
//        // eliminate test-scoped dependencies (no need in maven central POMs)
//        root.dependencies.removeAll { dep ->
//            dep.scope == "test"
//        }
//
//        // add all items necessary for maven central publication
//        root.children().last() + {
//            resolveStrategy = Closure.DELEGATE_FIRST
//
//            description 'Idiomatic Json parser for Kotlin'
//            name 'JSONKraken'
//            url 'https://github.com/zogar1993/jsonkraken'
//            organization {
//                name 'net.jemzart'
//                url 'https://jemzart.net'
//            }
//            issueManagement {
//                system 'GitHub'
//                url 'https://github.com/zogar1993/jsonkraken/issues'
//            }
//            licenses {
//                license {
//                    name 'Apache License 2.0'
//                    url 'https://www.apache.org/licenses/LICENSE-2.0'
//                    distribution 'repo'
//                }
//            }
//            scm {
//                url 'https://github.com/zogar1993/jsonkraken'
//                connection 'scm:git:git://github.com/zogar1993/jsonkraken.git'
//                developerConnection 'scm:git:ssh://git@github.com:zogar1993/jsonkraken.git'
//            }
//            developers {
//                developer {
//                    name 'zogar1993'
//                }
//            }
//        }
//    }
//}
//
//model {
//    tasks.generatePomFileForMavenJavaPublication {
//        destination = file("$buildDir/generated-pom.xml")
//    }
//    tasks.publishMavenJavaPublicationToMavenLocal {
//        dependsOn project.tasks.signArchives
//    }
//    tasks.publishMavenJavaPublicationToMavenRepository {
//        dependsOn project.tasks.signArchives
//    }
//}